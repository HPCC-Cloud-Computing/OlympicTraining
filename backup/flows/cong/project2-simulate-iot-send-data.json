[{"id":"f596a629.238848","type":"http response","z":"d419dec8.700c28","name":"","statusCode":"","headers":{},"x":1007.9287109375,"y":171.03570556640625,"wires":[]},{"id":"3753e260.10fcce","type":"iot-data-in","z":"d419dec8.700c28","name":"","mqttBroker":"c1c8f69a.cc8c3","topic":"iot/sensor","x":157,"y":105,"wires":[["fa2771cf.a7e4b"]]},{"id":"87741e92.db602","type":"influxdb-out","z":"d419dec8.700c28","name":"data_output_to_influxdb","influxdbServer":"f23c7270.62be68","measurement":"sensor_data","enableSchema":true,"dbTags":["sender_sensor","data_type"],"dbFields":[{"name":"value","type":"FLOAT"}],"x":959.857177734375,"y":96.85712432861328,"wires":[]},{"id":"fa2771cf.a7e4b","type":"function","z":"d419dec8.700c28","name":"convert data to influx form","func":"var payload = msg.payload;\nvar time_stamp = payload.time_stamp;\nvar time_precision = payload.time_precision;\nvar payload = msg.payload;\nvar time_stamp = payload.time_stamp;\nvar time_precision = payload.time_precision;\nif (time_precision !== \"millisecond\" && time_precision !== \"second\") {\n    node.error(\"Time precision \" + time_precision + \" is not supported! \" +\n        \"Supported type is second and millisecond\");\n\n} else {\n    if (time_precision == \"second\") {\n        time_stamp = time_stamp * Math.pow(10, 9);\n    } else if (time_precision == \"millisecond\") {\n        time_stamp = time_stamp * Math.pow(10, 6);\n    }\n    var outputMgs = [];\n    var sensorData = msg.payload.data;\n    for (var dataType in sensorData) {\n        msgOutPayload = {\n            tags:{\n                \"sender_sensor\":payload.sender_sensor,\n                \"data_type\":dataType,\n            },\n            fields:{\n                \"value\":parseFloat(sensorData[dataType]),\n            },\n            time_stamp:time_stamp,\n\n        };\n        outputMgs.push({payload:msgOutPayload});\n    }\n    return [outputMgs,];\n}","outputs":1,"noerr":0,"x":561.4285278320312,"y":89.14286041259766,"wires":[["87741e92.db602"]]},{"id":"5dce70e.1814f9","type":"chart-template","z":"d419dec8.700c28","name":"","x":544.5355834960938,"y":174.42852783203125,"wires":[["f596a629.238848"]]},{"id":"e7b721e3.c33d8","type":"inject","z":"d419dec8.700c28","name":"","topic":"","payload":"{\"dataType\":\"light\"}","payloadType":"json","repeat":"","crontab":"","once":false,"x":183.57144165039062,"y":257.8927917480469,"wires":[[]]},{"id":"b37f4b91.663418","type":"http in","z":"d419dec8.700c28","name":"","url":"/realtime-chart/api/get-init-data","method":"get","upload":false,"swaggerDoc":"","x":165,"y":500,"wires":[["b98c73e.18ebc9"]]},{"id":"f159dd06.0a5858","type":"http in","z":"d419dec8.700c28","name":"","url":"/realtime-chart","method":"get","upload":false,"swaggerDoc":"","x":165.02777099609375,"y":171.58331298828125,"wires":[["5dce70e.1814f9"]]},{"id":"dd00902d.443278","type":"http response","z":"d419dec8.700c28","name":"","statusCode":"","headers":{},"x":1023.7579956054688,"y":498.7935791015625,"wires":[]},{"id":"9e5a1462.330ff","type":"http in","z":"d419dec8.700c28","name":"","url":"/realtime-chart/api/get-lastest-data","method":"get","upload":false,"swaggerDoc":"","x":155,"y":680.2857055664062,"wires":[["732a89c4.23c33"]]},{"id":"b98c73e.18ebc9","type":"function","z":"d419dec8.700c28","name":"set unit - start time - end time","func":"let endTime = Date.now();\nlet startTime = endTime - 60*1000;\nmsg.timeSlice = {\n    startTime:startTime*Math.pow(10,6),\n    endTime:endTime*Math.pow(10,6)\n};\nif(msg.payload.dataType=='light'){\n    msg.payload.dataUnit ='lux';\n}else if(msg.payload.dataType=='humidity'){\n    msg.payload.dataUnit='%';\n}else if(msg.payload.dataType=='temperature'){\n    msg.payload.dataUnit='oC';\n}\nreturn msg;","outputs":1,"noerr":0,"x":232.65472412109375,"y":382.6507568359375,"wires":[["38da1c7b.96b464"]]},{"id":"eceac058.5b6458","type":"influxdb-query","z":"d419dec8.700c28","name":"query sensor data","influxdbServer":"f23c7270.62be68","queryString":"select *  from sensor_data  \nwhere\n    data_type='{{msg.payload.dataType}}' and\n    time >={{msg.timeSlice.startTime}} and\n    time <={{msg.timeSlice.endTime}}\n    \norder by time asc","outputTo":"query_sensor_data","x":751.0039672851562,"y":386.1150207519531,"wires":[["8594604f.32ae3"]]},{"id":"8594604f.32ae3","type":"function","z":"d419dec8.700c28","name":"format return obj","func":"let sensorInitDataList = [];\nfor (let i = 0; i < msg.query_sensor_list.length; i++) {\n    let sensorName = msg.query_sensor_list[i].value;\n    if (sensorName !== null) {\n        let duplicateColor = true;\n        let sensorInitData = {\n            id: sensorName,\n            timeSerieData: []\n        };\n        for (let i = 0; i < msg.query_sensor_data.length; i++) {\n            let timeSliceData = msg.query_sensor_data[i];\n            if (timeSliceData.sender_sensor == sensorInitData.id) {\n                sensorInitData.timeSerieData.push({\n                    timestamp: timeSliceData.time,\n                    value: timeSliceData.value\n                });\n            }\n        }\n        // sensorInitDataList.push(sensorInitData);\n        if (sensorInitData.timeSerieData.length > 0) {\n            sensorInitDataList.push(sensorInitData);\n        }    \n    }\n}\nmsg.payload.linesInitData = sensorInitDataList;\nreturn msg;","outputs":1,"noerr":0,"x":982.8731079101562,"y":389.642822265625,"wires":[["dd00902d.443278"]]},{"id":"38da1c7b.96b464","type":"influxdb-query","z":"d419dec8.700c28","name":"query sensor list","influxdbServer":"f23c7270.62be68","queryString":"show tag values \nfrom sensor_data \nwith key=sender_sensor","outputTo":"query_sensor_list","x":505.1785888671875,"y":388.03570556640625,"wires":[["eceac058.5b6458"]]},{"id":"4beba50e.d54e0c","type":"influxdb-query","z":"d419dec8.700c28","name":"query sensor list","influxdbServer":"f23c7270.62be68","queryString":"show tag values \nfrom sensor_data \nwith key=sender_sensor","outputTo":"query_sensor_list","x":522.857177734375,"y":547.1429443359375,"wires":[["398af19f.e7edee"]]},{"id":"398af19f.e7edee","type":"influxdb-query","z":"d419dec8.700c28","name":"query sensor data","influxdbServer":"f23c7270.62be68","queryString":"select *  from sensor_data  \nwhere\n    data_type='{{msg.payload.dataType}}' and\n    time >={{msg.timeSlice.startTime}} and\n    time <={{msg.timeSlice.endTime}}\n    \norder by time asc","outputTo":"query_sensor_data","x":748.6825256347656,"y":552.3650817871094,"wires":[["50b7bcce.b0ff1c"]]},{"id":"732a89c4.23c33","type":"function","z":"d419dec8.700c28","name":"set unit - start time - end time","func":"let endTime = Date.now();\nlet startTime = endTime - 2*1000;\nmsg.timeSlice = {\n    startTime:startTime*Math.pow(10,6),\n    endTime:endTime*Math.pow(10,6)\n};\nif(msg.payload.dataType=='light'){\n    msg.payload.dataUnit ='lux';\n}else if(msg.payload.dataType=='humidity'){\n    msg.payload.dataUnit='%';\n}else if(msg.payload.dataType=='temperature'){\n    msg.payload.dataUnit='oC';\n}\nreturn msg;","outputs":1,"noerr":0,"x":227.14288330078125,"y":555.7143249511719,"wires":[["4beba50e.d54e0c"]]},{"id":"527d1fe9.49bfd8","type":"http response","z":"d419dec8.700c28","name":"","statusCode":"","headers":{},"x":1022.857177734375,"y":658.5714111328125,"wires":[]},{"id":"50b7bcce.b0ff1c","type":"function","z":"d419dec8.700c28","name":"format return obj","func":"let lastestDataList = [];\nfor (let i = 0; i < msg.query_sensor_list.length; i++) {\n    let sensorName = msg.query_sensor_list[i].value;\n    if (sensorName !== null) {\n        let duplicateColor = true;\n        let lineData = {\n            id: sensorName,\n            timeSerieData: []\n        };\n        for (let i = 0; i < msg.query_sensor_data.length; i++) {\n            let timeSliceData = msg.query_sensor_data[i];\n            if (timeSliceData.sender_sensor == lineData.id) {\n                lineData.timeSerieData.push({\n                    timestamp: timeSliceData.time,\n                    value: timeSliceData.value\n                });\n            }\n        }\n        // sensorInitDataList.push(sensorInitData);\n        if (lineData.timeSerieData.length > 0) {\n            lastestDataList.push(lineData);\n        }    \n    }\n}\nmsg.payload.lastestDataList = lastestDataList;\nreturn msg;","outputs":1,"noerr":0,"x":984.8294677734375,"y":547.9921875,"wires":[["527d1fe9.49bfd8"]]},{"id":"9c3d84ea.1148d8","type":"debug","z":"d419dec8.700c28","name":"","active":true,"console":"false","complete":"false","x":1018.75,"y":285,"wires":[]},{"id":"c1c8f69a.cc8c3","type":"mqtt-broker","z":"","broker":"mqtt","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"f23c7270.62be68","type":"influxdb-server","z":"","host":"influxdb","port":"8086","database":"ICSE_IOT_DATA"}]
