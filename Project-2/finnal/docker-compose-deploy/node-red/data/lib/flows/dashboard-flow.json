[{"id":"a4eef163.13995","type":"http response","z":"2960edb0.a18802","name":"","statusCode":"","headers":{"Access-Control-Allow-Origin":"*"},"x":1115,"y":318,"wires":[]},{"id":"100e13d1.69afdc","type":"dashboard","z":"2960edb0.a18802","name":"","x":482,"y":62,"wires":[["a4eef163.13995"]]},{"id":"ccd5a542.5f5a88","type":"http in","z":"2960edb0.a18802","name":"","url":"dashboard","method":"get","upload":false,"swaggerDoc":"","x":178,"y":59,"wires":[["100e13d1.69afdc"]]},{"id":"c01eebd6.d44aa8","type":"influxdb in","z":"2960edb0.a18802","influxdb":"902408de.9bc558","name":"get devices info","query":"select time,devicesStatus,macAddr,type from devices_and_sensors where macAddr != '';","rawOutput":false,"precision":"","retentionPolicy":"","x":331,"y":157,"wires":[["d7e4fb47.431b78"]]},{"id":"d7e4fb47.431b78","type":"function","z":"2960edb0.a18802","name":"convert devices info data","func":"var devices = [];\nvar Device = function (macAddr, type) {\n    this.macAddr = macAddr;\n    this.type = type;\n    this.logs = []; //{time: \"\", devicesStatus: \"\"}\n}\n\nfor (let i=0;i<msg.payload.length;i++) {\n    let is_new_device = true;\n    for (let j=0;j<devices.length;j++) {\n        if (msg.payload[i].macAddr === devices[j].macAddr) {\n            devices[j].logs.push({\n                time: msg.payload[i].time,\n                devicesStatus: msg.payload[i].devicesStatus\n            })\n            is_new_device = false;\n            break;\n        }\n    }\n    if (is_new_device) {\n        let new_device = new Device(msg.payload[i].macAddr, msg.payload[i].type);\n        new_device.logs.push({\n            time: msg.payload[i].time,\n            devicesStatus: msg.payload[i].devicesStatus\n        })\n        devices.push(new_device);\n    }\n}\nmsg.payload = devices;\nreturn msg;","outputs":1,"noerr":0,"x":552,"y":159,"wires":[["a4eef163.13995"]]},{"id":"45f7ac57.e7eac4","type":"http in","z":"2960edb0.a18802","name":"","url":"devicesInfo","method":"get","upload":false,"swaggerDoc":"","x":105,"y":149,"wires":[["c01eebd6.d44aa8"]]},{"id":"78f4b1dc.9b64b","type":"http in","z":"2960edb0.a18802","name":"","url":"sensorsInfo","method":"get","upload":false,"swaggerDoc":"","x":102,"y":242,"wires":[["c792511e.1025b"]]},{"id":"c792511e.1025b","type":"influxdb in","z":"2960edb0.a18802","influxdb":"902408de.9bc558","name":"get sensors info","query":"select devices_macAddr,sensorID,sensorStatus from devices_and_sensors where sensorID != '';","rawOutput":false,"precision":"","retentionPolicy":"","x":333,"y":252,"wires":[["18dce599.f52eca"]]},{"id":"18dce599.f52eca","type":"function","z":"2960edb0.a18802","name":"convert sensors info data","func":"var sensors = [];\nvar Sensor = function (device_macAddr, sensorID) {\n    this.device_macAddr = device_macAddr;\n    this.sensorID = sensorID;\n    this.logs = []; //{time: \"\", sensorStatus: \"\"}\n}\n\nfor (let i=0;i<msg.payload.length;i++) {\n    // msg.payload[i].sensorID= msg.payload[i].sensorID.split('-')[1];\n    let is_new_sensor = true;\n    for (let j=0;j<sensors.length;j++) {\n        if (msg.payload[i].sensorID === sensors[j].sensorID) {\n            sensors[j].logs.push({\n                time: msg.payload[i].time,\n                sensorStatus: msg.payload[i].sensorStatus\n            })\n            is_new_sensor = false;\n            break;\n        }\n    }\n    if (is_new_sensor) {\n        let new_sensor = new Sensor(msg.payload[i].devices_macAddr, msg.payload[i].sensorID);\n        new_sensor.logs.push({\n            time: msg.payload[i].time,\n            sensorStatus: msg.payload[i].sensorStatus\n        })\n        sensors.push(new_sensor);\n    }\n}\nmsg.payload = sensors;\nreturn msg;","outputs":1,"noerr":0,"x":577,"y":247,"wires":[["a4eef163.13995"]]},{"id":"ebc3fd2f.e8669","type":"http in","z":"2960edb0.a18802","name":"","url":"/realtime-chart/api/devices/initData","method":"get","upload":false,"swaggerDoc":"","x":155,"y":338,"wires":[["c9049824.2eb8a8"]]},{"id":"c9049824.2eb8a8","type":"function","z":"2960edb0.a18802","name":"add query sensors","func":"msg.macAddr = msg.payload.macAddr;\nmsg.query = \"show tag values from devices_and_sensors with key=sensorID where devices_macAddr='\" + msg.macAddr + \"'\";\nreturn msg;","outputs":1,"noerr":0,"x":285,"y":413,"wires":[["ce396a1e.6fec28"]]},{"id":"ce396a1e.6fec28","type":"influxdb in","z":"2960edb0.a18802","influxdb":"902408de.9bc558","name":"get sensors from a device","query":"","rawOutput":false,"precision":"","retentionPolicy":"","x":456,"y":353,"wires":[["b435852c.ea19f8"]]},{"id":"b435852c.ea19f8","type":"function","z":"2960edb0.a18802","name":"add query init data","func":"msg.sensorIDs = msg.payload;\n\nlet endTime = Date.now();\nlet startTime = endTime - 60*1000;\nstartTime = startTime*Math.pow(10,6),\nendTime = endTime*Math.pow(10,6)\n\nmsg.query = \"select * from data where macAddr='\" + \n    msg.macAddr + \"' and \" + \n    \"time >= \"+ startTime + \" and \" + \n    \"time <= \" + endTime;\nreturn msg;","outputs":1,"noerr":0,"x":542,"y":424,"wires":[["f767868f.22b628"]]},{"id":"f767868f.22b628","type":"influxdb in","z":"2960edb0.a18802","influxdb":"902408de.9bc558","name":"get init data","query":"","rawOutput":false,"precision":"","retentionPolicy":"","x":729,"y":347,"wires":[["dd5fbeb2.6ca54"]]},{"id":"dd5fbeb2.6ca54","type":"function","z":"2960edb0.a18802","name":"format init data response","func":"var units_range = {\n    c: {min: 1, max: 100},\n    lux: {min: 1, max: 100},\n    humi: {min: 1, max: 65535}\n};\n\nvar groupLineChart = [\n    {unit: \"\", lines: []},\n    {unit: \"Lux\", lines: []}\n]\n\nvar initSensorsData = [];\nvar Sensor = function (macAddr, sensorID, unit) {\n    this.macAddr = macAddr;\n    this.sensorID = sensorID;\n    this.unit = unit;\n    this.timeSeriesData = [] // {\"time\": \"\", \"value\": };\n}\n\nfor (let i = 0; i < msg.payload.length; i++) {\n    // msg.payload[i].sensorID= msg.payload[i].sensorID.split('-')[1];\n    let is_new_sensor = true;\n    for (let j = 0; j < initSensorsData.length; j++) {\n        if (msg.payload[i].sensorID === initSensorsData[j].sensorID) {\n            initSensorsData[j].timeSeriesData.push({\n                time: msg.payload[i].time,\n                value: msg.payload[i].value\n            })\n            is_new_sensor = false;\n            break;\n        }\n    }\n    if (is_new_sensor) {\n        let new_sensor = new Sensor(msg.payload[i].macAddr, msg.payload[i].sensorID,\n            msg.payload[i].unit);\n        new_sensor.timeSeriesData.push({\n            time: msg.payload[i].time,\n            value: msg.payload[i].value\n        })\n        initSensorsData.push(new_sensor);\n    }\n}\n\nfor (let i = 0; i < initSensorsData.length; i++) {\n    if (initSensorsData[i].unit.toLowerCase() === 'c' ||\n        initSensorsData[i].unit.toLowerCase() === '%') {\n        groupLineChart[0].lines.push(initSensorsData[i]);\n        groupLineChart[0].unit += \" / \" + initSensorsData[i].unit;\n    }\n    if (initSensorsData[i].unit.toLowerCase() === 'lux'){\n        groupLineChart[1].lines.push(initSensorsData[i]);\n    }\n}\n\ngroupLineChart[0].unit = groupLineChart[0].unit.slice(3,groupLineChart[0].unit.length);\n\nmsg.payload = groupLineChart;\nreturn msg;","outputs":1,"noerr":0,"x":841,"y":421,"wires":[["a4eef163.13995"]]},{"id":"ab1f7674.59b788","type":"http in","z":"2960edb0.a18802","name":"","url":"/realtime-chart/api/devices/latestData","method":"get","upload":false,"swaggerDoc":"","x":165,"y":511,"wires":[["a922d9bf.5d7e68"]]},{"id":"a922d9bf.5d7e68","type":"function","z":"2960edb0.a18802","name":"add query latest data","func":"msg.macAddr = msg.payload.macAddr;\n\nlet endTime = Date.now();\nlet startTime = endTime - 5*1000;\nstartTime = startTime*Math.pow(10,6),\nendTime = endTime*Math.pow(10,6)\n\nmsg.query = \"select * from data where macAddr='\" + \n    msg.macAddr + \"' and \" + \n    \"time >= \"+ startTime + \" and \" + \n    \"time <= \" + endTime;\nreturn msg;","outputs":1,"noerr":0,"x":362,"y":592,"wires":[["226c3a41.d83296"]]},{"id":"226c3a41.d83296","type":"influxdb in","z":"2960edb0.a18802","influxdb":"902408de.9bc558","name":"get latest data","query":"","rawOutput":false,"precision":"","retentionPolicy":"","x":516,"y":514,"wires":[["7955a3f3.857c5c"]]},{"id":"7955a3f3.857c5c","type":"function","z":"2960edb0.a18802","name":"format latest data response","func":"var initSensorsData = [];\nvar Sensor = function (macAddr, sensorID, unit) {\n    this.macAddr = macAddr;\n    this.sensorID = sensorID;\n    this.unit = unit;\n    this.timeSeriesData = [] // {\"time\": \"\", \"value\": };\n}\n\nfor (let i=0;i<msg.payload.length;i++) {\n    // msg.payload[i].sensorID= msg.payload[i].sensorID.split('-')[1];\n    let is_new_sensor = true;\n    for (let j=0;j<initSensorsData.length;j++) {\n        if (msg.payload[i].sensorID === initSensorsData[j].sensorID) {\n            initSensorsData[j].timeSeriesData.push({\n                time: msg.payload[i].time,\n                value: msg.payload[i].value\n            })\n            is_new_sensor = false;\n            break;\n        }\n    }\n    if (is_new_sensor) {\n        let new_sensor = new Sensor(msg.payload[i].macAddr, msg.payload[i].sensorID,\n            msg.payload[i].unit);\n        new_sensor.timeSeriesData.push({\n            time: msg.payload[i].time,\n            value: msg.payload[i].value\n        })\n        initSensorsData.push(new_sensor);\n    }\n}\nmsg.payload = initSensorsData;\nreturn msg;","outputs":1,"noerr":0,"x":727,"y":576,"wires":[["a4eef163.13995"]]},{"id":"b203d721.47cdf8","type":"http in","z":"2960edb0.a18802","name":"","url":"/realtime-chart/api/sensor/latestData","method":"get","upload":false,"swaggerDoc":"","x":169,"y":642,"wires":[["761b5e50.3a8e2"]]},{"id":"761b5e50.3a8e2","type":"function","z":"2960edb0.a18802","name":"add query latest data","func":"msg.arrSensorID = msg.payload.sensorID.split(',');\nlet sensor_query = \"\";\nfor(let i = 0;i<msg.arrSensorID.length;i++){\n    if(msg.arrSensorID[i]){\n        sensor_query += \"or sensorID = '\" + msg.arrSensorID[i] + \"' \";\n    }\n}\n\nsensor_query = sensor_query.slice(2, sensor_query.length);\n\nlet endTime = Date.now();\nlet startTime = endTime - 5*1000;\nstartTime = startTime*Math.pow(10,6),\nendTime = endTime*Math.pow(10,6)\n\nmsg.query = \"select * from data where \" +\n    sensor_query + \" and \" +\n    \"time >= \"+ startTime + \" and \" +\n    \"time <= \" + endTime;\nreturn msg;","outputs":1,"noerr":0,"x":355,"y":724,"wires":[["e1c6e7c3.a38f68"]]},{"id":"e1c6e7c3.a38f68","type":"influxdb in","z":"2960edb0.a18802","influxdb":"902408de.9bc558","name":"get latest sensor data","query":"","rawOutput":false,"precision":"","retentionPolicy":"","x":532,"y":644,"wires":[["5c9a181d.df1b28"]]},{"id":"5c9a181d.df1b28","type":"function","z":"2960edb0.a18802","name":"format latest data response","func":"var initSensorsData = [];\nvar Sensor = function (macAddr, sensorID, unit) {\n    this.macAddr = macAddr;\n    this.sensorID = sensorID;\n    this.unit = unit;\n    this.timeSeriesData = [] // {\"time\": \"\", \"value\": };\n}\n\nfor (let i=0;i<msg.payload.length;i++) {\n    // msg.payload[i].sensorID= msg.payload[i].sensorID.split('-')[1];\n    let is_new_sensor = true;\n    for (let j=0;j<initSensorsData.length;j++) {\n        if (msg.payload[i].sensorID === initSensorsData[j].sensorID) {\n            initSensorsData[j].timeSeriesData.push({\n                time: msg.payload[i].time,\n                value: msg.payload[i].value\n            })\n            is_new_sensor = false;\n            break;\n        }\n    }\n    if (is_new_sensor) {\n        let new_sensor = new Sensor(msg.payload[i].macAddr, msg.payload[i].sensorID,\n            msg.payload[i].unit);\n        new_sensor.timeSeriesData.push({\n            time: msg.payload[i].time,\n            value: msg.payload[i].value\n        })\n        initSensorsData.push(new_sensor);\n    }\n}\nmsg.payload = initSensorsData;\nreturn msg;","outputs":1,"noerr":0,"x":698,"y":722,"wires":[["a4eef163.13995"]]},{"id":"902408de.9bc558","type":"influxdb","z":"","hostname":"influxdb","port":"8086","protocol":"http","database":"ICSE_IOT_DATA","name":"","usetls":false,"tls":""}]
