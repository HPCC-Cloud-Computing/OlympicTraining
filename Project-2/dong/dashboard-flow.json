[{"id":"7cdb5fc2.3c7ae","type":"http response","z":"d5595afd.b3b718","name":"","statusCode":"","headers":{"Access-Control-Allow-Origin":"*"},"x":1115,"y":338,"wires":[]},{"id":"2f7cd2a3.9a25ce","type":"dashboard","z":"d5595afd.b3b718","name":"","x":482,"y":82,"wires":[["7cdb5fc2.3c7ae"]]},{"id":"b35ed40d.e03c88","type":"http in","z":"d5595afd.b3b718","name":"","url":"dashboard","method":"get","upload":false,"swaggerDoc":"","x":178,"y":79,"wires":[["2f7cd2a3.9a25ce"]]},{"id":"91d0c7e1.b0a828","type":"influxdb in","z":"d5595afd.b3b718","influxdb":"c5e7a34a.41616","name":"get devices info","query":"select time,devicesStatus,macAddr,type from devices_and_sensors where macAddr != '';","rawOutput":false,"precision":"","retentionPolicy":"","x":331,"y":177,"wires":[["a86d96b7.6b7948"]]},{"id":"a86d96b7.6b7948","type":"function","z":"d5595afd.b3b718","name":"convert devices info data","func":"var devices = [];\nvar Device = function (macAddr, type) {\n    this.macAddr = macAddr;\n    this.type = type;\n    this.logs = []; //{time: \"\", devicesStatus: \"\"}\n}\n\nfor (let i=0;i<msg.payload.length;i++) {\n    let is_new_device = true;\n    for (let j=0;j<devices.length;j++) {\n        if (msg.payload[i].macAddr === devices[j].macAddr) {\n            devices[j].logs.push({\n                time: msg.payload[i].time,\n                devicesStatus: msg.payload[i].devicesStatus\n            })\n            is_new_device = false;\n            break;\n        }\n    }\n    if (is_new_device) {\n        let new_device = new Device(msg.payload[i].macAddr, msg.payload[i].type);\n        new_device.logs.push({\n            time: msg.payload[i].time,\n            devicesStatus: msg.payload[i].devicesStatus\n        })\n        devices.push(new_device);\n    }\n}\nmsg.payload = devices;\nreturn msg;","outputs":1,"noerr":0,"x":552,"y":179,"wires":[["7cdb5fc2.3c7ae"]]},{"id":"82508e1e.98942","type":"http in","z":"d5595afd.b3b718","name":"","url":"devicesInfo","method":"get","upload":false,"swaggerDoc":"","x":105,"y":169,"wires":[["91d0c7e1.b0a828"]]},{"id":"81985e85.bf84","type":"http in","z":"d5595afd.b3b718","name":"","url":"sensorsInfo","method":"get","upload":false,"swaggerDoc":"","x":102,"y":262,"wires":[["1035d728.831f09"]]},{"id":"1035d728.831f09","type":"influxdb in","z":"d5595afd.b3b718","influxdb":"c5e7a34a.41616","name":"get sensors info","query":"select devices_macAddr,sensorID,sensorStatus from devices_and_sensors where sensorID != '';","rawOutput":false,"precision":"","retentionPolicy":"","x":333,"y":272,"wires":[["e3e1c353.ecb77"]]},{"id":"e3e1c353.ecb77","type":"function","z":"d5595afd.b3b718","name":"convert sensors info data","func":"var sensors = [];\nvar Sensor = function (device_macAddr, sensorID) {\n    this.device_macAddr = device_macAddr;\n    this.sensorID = sensorID;\n    this.logs = []; //{time: \"\", sensorStatus: \"\"}\n}\n\nfor (let i=0;i<msg.payload.length;i++) {\n    // msg.payload[i].sensorID= msg.payload[i].sensorID.split('-')[1];\n    let is_new_sensor = true;\n    for (let j=0;j<sensors.length;j++) {\n        if (msg.payload[i].sensorID === sensors[j].sensorID) {\n            sensors[j].logs.push({\n                time: msg.payload[i].time,\n                sensorStatus: msg.payload[i].sensorStatus\n            })\n            is_new_sensor = false;\n            break;\n        }\n    }\n    if (is_new_sensor) {\n        let new_sensor = new Sensor(msg.payload[i].devices_macAddr, msg.payload[i].sensorID);\n        new_sensor.logs.push({\n            time: msg.payload[i].time,\n            sensorStatus: msg.payload[i].sensorStatus\n        })\n        sensors.push(new_sensor);\n    }\n}\nmsg.payload = sensors;\nreturn msg;","outputs":1,"noerr":0,"x":577,"y":267,"wires":[["7cdb5fc2.3c7ae"]]},{"id":"be4bb011.6e51a","type":"mqtt in","z":"d5595afd.b3b718","name":"","topic":"icse/data","qos":"2","broker":"fce3fdf1.97d65","x":168,"y":840,"wires":[["f8791e9e.30bf6"]]},{"id":"f8791e9e.30bf6","type":"function","z":"d5595afd.b3b718","name":"convert temperature data","func":"msg.payload = JSON.parse(msg.payload);\nmsg.payload.sensorID = msg.payload.macAddr + \"-\" + msg.payload.sensorID;\n\nlet temp_payload = [];\ntemp_payload.push(\n    {\"value\": msg.payload.value,\n    \"unit\": msg.payload.unit});\ntemp_payload.push(\n    {\"macAddr\": msg.payload.macAddr,\n    \"sensorID\": msg.payload.sensorID})\n\nmsg.payload = temp_payload;\nreturn msg;","outputs":1,"noerr":0,"x":412,"y":880,"wires":[["eaf2bbe3.2993f8"]]},{"id":"eaf2bbe3.2993f8","type":"influxdb out","z":"d5595afd.b3b718","influxdb":"c5e7a34a.41616","name":"icse data ","measurement":"data","precision":"","retentionPolicy":"","x":658,"y":873,"wires":[]},{"id":"f42b30fb.96e1b","type":"http in","z":"d5595afd.b3b718","name":"","url":"/realtime-chart/api/devices/initData","method":"get","upload":false,"swaggerDoc":"","x":155,"y":358,"wires":[["3b3746cb.78beda"]]},{"id":"3b3746cb.78beda","type":"function","z":"d5595afd.b3b718","name":"add query sensors","func":"msg.macAddr = msg.payload.macAddr;\nmsg.query = \"show tag values from devices_and_sensors with key=sensorID where devices_macAddr='\" + msg.macAddr + \"'\";\nreturn msg;","outputs":1,"noerr":0,"x":285,"y":433,"wires":[["24458701.878a58"]]},{"id":"24458701.878a58","type":"influxdb in","z":"d5595afd.b3b718","influxdb":"c5e7a34a.41616","name":"get sensors from a device","query":"","rawOutput":false,"precision":"","retentionPolicy":"","x":456,"y":373,"wires":[["7e6e5e49.eb9cd"]]},{"id":"7e6e5e49.eb9cd","type":"function","z":"d5595afd.b3b718","name":"add query init data","func":"msg.sensorIDs = msg.payload;\n\nlet endTime = Date.now();\nlet startTime = endTime - 60*1000;\nstartTime = startTime*Math.pow(10,6),\nendTime = endTime*Math.pow(10,6)\n\nmsg.query = \"select * from data where macAddr='\" + \n    msg.macAddr + \"' and \" + \n    \"time >= \"+ startTime + \" and \" + \n    \"time <= \" + endTime;\nreturn msg;","outputs":1,"noerr":0,"x":542,"y":444,"wires":[["71a0ee0.6c76f14"]]},{"id":"71a0ee0.6c76f14","type":"influxdb in","z":"d5595afd.b3b718","influxdb":"c5e7a34a.41616","name":"get init data","query":"","rawOutput":false,"precision":"","retentionPolicy":"","x":729,"y":367,"wires":[["93041a.25e00be8"]]},{"id":"93041a.25e00be8","type":"function","z":"d5595afd.b3b718","name":"format init data response","func":"var units_range = {\n    c: {min: 1, max: 100},\n    lux: {min: 1, max: 100},\n    humi: {min: 1, max: 65535}\n};\n\nvar groupLineChart = [\n    {unit: \"\", lines: []},\n    {unit: \"Lux\", lines: []}\n]\n\nvar initSensorsData = [];\nvar Sensor = function (macAddr, sensorID, unit) {\n    this.macAddr = macAddr;\n    this.sensorID = sensorID;\n    this.unit = unit;\n    this.timeSeriesData = [] // {\"time\": \"\", \"value\": };\n}\n\nfor (let i = 0; i < msg.payload.length; i++) {\n    // msg.payload[i].sensorID= msg.payload[i].sensorID.split('-')[1];\n    let is_new_sensor = true;\n    for (let j = 0; j < initSensorsData.length; j++) {\n        if (msg.payload[i].sensorID === initSensorsData[j].sensorID) {\n            initSensorsData[j].timeSeriesData.push({\n                time: msg.payload[i].time,\n                value: msg.payload[i].value\n            })\n            is_new_sensor = false;\n            break;\n        }\n    }\n    if (is_new_sensor) {\n        let new_sensor = new Sensor(msg.payload[i].macAddr, msg.payload[i].sensorID,\n            msg.payload[i].unit);\n        new_sensor.timeSeriesData.push({\n            time: msg.payload[i].time,\n            value: msg.payload[i].value\n        })\n        initSensorsData.push(new_sensor);\n    }\n}\n\nfor (let i = 0; i < initSensorsData.length; i++) {\n    if (initSensorsData[i].unit.toLowerCase() === 'c' ||\n        initSensorsData[i].unit.toLowerCase() === '%') {\n        groupLineChart[0].lines.push(initSensorsData[i]);\n        groupLineChart[0].unit += \" / \" + initSensorsData[i].unit;\n    }\n    if (initSensorsData[i].unit.toLowerCase() === 'lux'){\n        groupLineChart[1].lines.push(initSensorsData[i]);\n    }\n}\n\ngroupLineChart[0].unit = groupLineChart[0].unit.slice(3,groupLineChart[0].unit.length);\n\nmsg.payload = groupLineChart;\nreturn msg;","outputs":1,"noerr":0,"x":841,"y":441,"wires":[["7cdb5fc2.3c7ae"]]},{"id":"2282945a.ee619c","type":"http in","z":"d5595afd.b3b718","name":"","url":"/realtime-chart/api/devices/latestData","method":"get","upload":false,"swaggerDoc":"","x":165,"y":531,"wires":[["2c64136c.602ccc"]]},{"id":"2c64136c.602ccc","type":"function","z":"d5595afd.b3b718","name":"add query latest data","func":"msg.macAddr = msg.payload.macAddr;\n\nlet endTime = Date.now();\nlet startTime = endTime - 5*1000;\nstartTime = startTime*Math.pow(10,6),\nendTime = endTime*Math.pow(10,6)\n\nmsg.query = \"select * from data where macAddr='\" + \n    msg.macAddr + \"' and \" + \n    \"time >= \"+ startTime + \" and \" + \n    \"time <= \" + endTime;\nreturn msg;","outputs":1,"noerr":0,"x":362,"y":612,"wires":[["6dadef03.84365"]]},{"id":"6dadef03.84365","type":"influxdb in","z":"d5595afd.b3b718","influxdb":"c5e7a34a.41616","name":"get latest data","query":"","rawOutput":false,"precision":"","retentionPolicy":"","x":516,"y":534,"wires":[["9212d02f.19184"]]},{"id":"9212d02f.19184","type":"function","z":"d5595afd.b3b718","name":"format latest data response","func":"var initSensorsData = [];\nvar Sensor = function (macAddr, sensorID, unit) {\n    this.macAddr = macAddr;\n    this.sensorID = sensorID;\n    this.unit = unit;\n    this.timeSeriesData = [] // {\"time\": \"\", \"value\": };\n}\n\nfor (let i=0;i<msg.payload.length;i++) {\n    // msg.payload[i].sensorID= msg.payload[i].sensorID.split('-')[1];\n    let is_new_sensor = true;\n    for (let j=0;j<initSensorsData.length;j++) {\n        if (msg.payload[i].sensorID === initSensorsData[j].sensorID) {\n            initSensorsData[j].timeSeriesData.push({\n                time: msg.payload[i].time,\n                value: msg.payload[i].value\n            })\n            is_new_sensor = false;\n            break;\n        }\n    }\n    if (is_new_sensor) {\n        let new_sensor = new Sensor(msg.payload[i].macAddr, msg.payload[i].sensorID,\n            msg.payload[i].unit);\n        new_sensor.timeSeriesData.push({\n            time: msg.payload[i].time,\n            value: msg.payload[i].value\n        })\n        initSensorsData.push(new_sensor);\n    }\n}\nmsg.payload = initSensorsData;\nreturn msg;","outputs":1,"noerr":0,"x":727,"y":596,"wires":[["7cdb5fc2.3c7ae"]]},{"id":"5e88a8dc.9eb7d8","type":"http in","z":"d5595afd.b3b718","name":"","url":"/realtime-chart/api/sensor/latestData","method":"get","upload":false,"swaggerDoc":"","x":169,"y":662,"wires":[["a0919af9.a13c48"]]},{"id":"a0919af9.a13c48","type":"function","z":"d5595afd.b3b718","name":"add query latest data","func":"msg.arrSensorID = msg.payload.sensorID.split(',');\nlet sensor_query = \"\";\nfor(let i = 0;i<msg.arrSensorID.length;i++){\n    if(msg.arrSensorID[i]){\n        sensor_query += \"or sensorID = '\" + msg.arrSensorID[i] + \"' \";\n    }\n}\n\nsensor_query = sensor_query.slice(2, sensor_query.length);\n\nlet endTime = Date.now();\nlet startTime = endTime - 5*1000;\nstartTime = startTime*Math.pow(10,6),\nendTime = endTime*Math.pow(10,6)\n\nmsg.query = \"select * from data where \" +\n    sensor_query + \" and \" +\n    \"time >= \"+ startTime + \" and \" +\n    \"time <= \" + endTime;\nreturn msg;","outputs":1,"noerr":0,"x":355,"y":744,"wires":[["43ff72f3.5080ec"]]},{"id":"43ff72f3.5080ec","type":"influxdb in","z":"d5595afd.b3b718","influxdb":"c5e7a34a.41616","name":"get latest sensor data","query":"","rawOutput":false,"precision":"","retentionPolicy":"","x":532,"y":664,"wires":[["e597527e.6ff2a"]]},{"id":"e597527e.6ff2a","type":"function","z":"d5595afd.b3b718","name":"format latest data response","func":"var initSensorsData = [];\nvar Sensor = function (macAddr, sensorID, unit) {\n    this.macAddr = macAddr;\n    this.sensorID = sensorID;\n    this.unit = unit;\n    this.timeSeriesData = [] // {\"time\": \"\", \"value\": };\n}\n\nfor (let i=0;i<msg.payload.length;i++) {\n    // msg.payload[i].sensorID= msg.payload[i].sensorID.split('-')[1];\n    let is_new_sensor = true;\n    for (let j=0;j<initSensorsData.length;j++) {\n        if (msg.payload[i].sensorID === initSensorsData[j].sensorID) {\n            initSensorsData[j].timeSeriesData.push({\n                time: msg.payload[i].time,\n                value: msg.payload[i].value\n            })\n            is_new_sensor = false;\n            break;\n        }\n    }\n    if (is_new_sensor) {\n        let new_sensor = new Sensor(msg.payload[i].macAddr, msg.payload[i].sensorID,\n            msg.payload[i].unit);\n        new_sensor.timeSeriesData.push({\n            time: msg.payload[i].time,\n            value: msg.payload[i].value\n        })\n        initSensorsData.push(new_sensor);\n    }\n}\nmsg.payload = initSensorsData;\nreturn msg;","outputs":1,"noerr":0,"x":698,"y":742,"wires":[["7cdb5fc2.3c7ae"]]},{"id":"c5e7a34a.41616","type":"influxdb","z":"","hostname":"127.0.0.1","port":"8086","protocol":"http","database":"ICSE_IOT_DATA","name":"","usetls":false,"tls":""},{"id":"fce3fdf1.97d65","type":"mqtt-broker","z":"","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""}]
