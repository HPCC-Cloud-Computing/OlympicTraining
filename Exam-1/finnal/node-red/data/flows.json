[{"id":"f2dcdcd4.dd698","type":"tab","label":"dashboard","disabled":false,"info":""},{"id":"e896fa76.f883a8","type":"tab","label":"Simulator logic flow","disabled":true,"info":""},{"id":"d977b914.9b8da8","type":"tab","label":"Handle flows","disabled":false,"info":""},{"id":"33ff2d02.8176c2","type":"influxdb","z":"","hostname":"127.0.0.1","port":"8086","protocol":"http","database":"icse_iot","name":"","usetls":false,"tls":""},{"id":"9d239fb2.ffc52","type":"MySQLdatabase","z":"","host":"mysql","port":"3306","db":"icse_iot","tz":""},{"id":"824650f7.f53e","type":"mqtt-broker","z":"","broker":"mqtt","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"75d3da9a.6f17c4","type":"influxdb","z":"","hostname":"influxdb","port":"8086","protocol":"http","database":"icse_iot","name":"","usetls":false,"tls":""},{"id":"28f214f2.dc330c","type":"mqtt-broker","z":"","broker":"icse_mqtt","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"8ac3fe74.8f4f1","type":"MySQLdatabase","z":"","host":"icse_mysql","port":"3306","db":"icse_iot","tz":""},{"id":"237de487.7529bc","type":"mqtt-broker","z":"","broker":"icse_mqtt","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"e02c576f.14e108","type":"influxdb-server","z":"","host":"influxdb","port":"8086","database":"icse_iot"},{"id":"3010223e.62d47e","type":"CustormMySQLdatabase","z":"","host":"mysql","port":"3306","db":"icse_iot","tz":""},{"id":"5587714e.79651","type":"http in","z":"f2dcdcd4.dd698","name":"","url":"device/api/info","method":"get","upload":false,"swaggerDoc":"","x":104,"y":164,"wires":[["f144d908.a0e498"]]},{"id":"f23f5606.c83f58","type":"function","z":"f2dcdcd4.dd698","name":"format response","func":"let payload = [];\nfor(let i = 0;i<msg.payload.length;i++){\n    let device = msg.payload[i];\n    payload.push({\n        macAddr: device.macAddr, \n        deviceType: device.type, \n        deviceStatus: device.status, \n        createdAt: device.created_at \n    })\n}\nmsg.payload = payload;\nreturn msg;","outputs":1,"noerr":0,"x":594,"y":184,"wires":[["652e460e.41ae28"]]},{"id":"404f673d.58d2b8","type":"http in","z":"f2dcdcd4.dd698","name":"","url":"sensor/api/info","method":"get","upload":false,"swaggerDoc":"","x":112,"y":283,"wires":[["42002991.84c038"]]},{"id":"abf18714.4c54c8","type":"function","z":"f2dcdcd4.dd698","name":"format response","func":"let payload = [];\nfor(let i = 0;i<msg.payload.length;i++){\n    let sensor = msg.payload[i];\n    payload.push({\n        macAddr: sensor.macAddr, \n        sensorID: sensor.name, \n\t\tsensorStatus: sensor.status, \n\t\tcreatedAt: sensor.created_at\n    })\n}\nmsg.payload = payload;\nreturn msg;","outputs":1,"noerr":0,"x":648,"y":276,"wires":[["652e460e.41ae28"]]},{"id":"652e460e.41ae28","type":"http response","z":"f2dcdcd4.dd698","name":"","statusCode":"","headers":{},"x":1048,"y":283,"wires":[]},{"id":"996261ca.b6e5f","type":"http in","z":"f2dcdcd4.dd698","name":"","url":"device/api/logs","method":"get","upload":false,"swaggerDoc":"","x":95,"y":365,"wires":[["60eede9b.cc91"]]},{"id":"ca565132.e0b71","type":"influxdb in","z":"f2dcdcd4.dd698","influxdb":"75d3da9a.6f17c4","name":"get device's macAddrs","query":"show tag values from devices_and_sensors with key=sensorID","rawOutput":false,"precision":"","retentionPolicy":"","x":725,"y":350,"wires":[["652e460e.41ae28"]]},{"id":"60eede9b.cc91","type":"function","z":"f2dcdcd4.dd698","name":"create query device logs ","func":"let macAddr = msg.payload.macAddr;\nmsg.query = \"select time,deviceStatus from devices_and_sensors where macAddr='\" + macAddr + \"' and isDevice=True;\";\nreturn msg;","outputs":1,"noerr":0,"x":441,"y":364,"wires":[["ca565132.e0b71"]]},{"id":"b43ab24e.0b9a5","type":"http in","z":"f2dcdcd4.dd698","name":"","url":"sensor/api/logs","method":"get","upload":false,"swaggerDoc":"","x":96,"y":439,"wires":[["fabdafeb.e25e2"]]},{"id":"632dbe22.ed23","type":"influxdb in","z":"f2dcdcd4.dd698","influxdb":"75d3da9a.6f17c4","name":"get device's macAddrs","query":"show tag values from devices_and_sensors with key=sensorID","rawOutput":false,"precision":"","retentionPolicy":"","x":720,"y":424,"wires":[["652e460e.41ae28"]]},{"id":"fabdafeb.e25e2","type":"function","z":"f2dcdcd4.dd698","name":"create query sensor logs ","func":"let sensorID = msg.payload.sensorID;\nmsg.query = \"select time,sensorStatus from devices_and_sensors where sensorID='\" + sensorID + \"';\";\nreturn msg;","outputs":1,"noerr":0,"x":442,"y":438,"wires":[["632dbe22.ed23"]]},{"id":"4279151.f1915ec","type":"http in","z":"f2dcdcd4.dd698","name":"","url":"/realtime-chart/api/device/initData","method":"get","upload":false,"swaggerDoc":"","x":155,"y":517,"wires":[["70b29b47.a0e904"]]},{"id":"5722c96e.8ded18","type":"function","z":"f2dcdcd4.dd698","name":"add query init data","func":"// msg.sensors = msg.payload;\n\nlet macAddr = msg.macAddr;\nlet endTime = Date.now();\nlet startTime = endTime - 60*1000;\nstartTime = startTime*Math.pow(10,6),\nendTime = endTime*Math.pow(10,6)\n\nmsg.query = \"select * from data where macAddr='\" + \n    macAddr + \"' and \" + \n    \"time >= \"+ startTime + \" and \" + \n    \"time <= \" + endTime;\nreturn msg;","outputs":1,"noerr":0,"x":568,"y":575,"wires":[["b8faf8da.ff5c58"]]},{"id":"b8faf8da.ff5c58","type":"influxdb in","z":"f2dcdcd4.dd698","influxdb":"75d3da9a.6f17c4","name":"get init data","query":"","rawOutput":false,"precision":"","retentionPolicy":"","x":788,"y":564,"wires":[["7dbdfbd1.6ba624"]]},{"id":"7dbdfbd1.6ba624","type":"function","z":"f2dcdcd4.dd698","name":"format init data response","func":"var units_range = {\n    c: {min: 1, max: 100},\n    lux: {min: 1, max: 100},\n    humi: {min: 1, max: 65535}\n};\n\nvar groupLineChart = [\n    {unit: \"\", lines: []},\n    {unit: \"Lux\", lines: []}\n]\n\nfor(let i = 0;i<msg.sensors.length;i++){\n    msg.sensors[i].timeSeriesData = [];\n    msg.sensors[i].sensorID = msg.sensors[i].name;\n}\n\nfor (let i = 0; i < msg.payload.length; i++) {\n    // msg.payload[i].sensorID= msg.payload[i].sensorID.split('-')[1];\n    let is_new_sensor = true;\n    for (let j = 0; j < msg.sensors.length; j++) {\n        if (msg.payload[i].name === msg.sensors[j].name) {\n            msg.sensors[j].timeSeriesData.push({\n                time: msg.payload[i].time,\n                value: msg.payload[i].value\n            })\n            break;\n        }\n    }\n    // if (is_new_sensor) {\n    //     let new_sensor = new Sensor(msg.payload[i].macAddr, msg.payload[i].sensorID,\n    //         msg.payload[i].unit);\n    //     new_sensor.timeSeriesData.push({\n    //         time: msg.payload[i].time,\n    //         value: msg.payload[i].value\n    //     })\n    //     initSensorsData.push(new_sensor);\n    // }\n}\n\nfor (let i = 0; i < msg.sensors.length; i++) {\n    if (msg.sensors[i].unit.toLowerCase() === 'c' ||\n        msg.sensors[i].unit.toLowerCase() === '%') {\n        groupLineChart[0].lines.push(msg.sensors[i]);\n        groupLineChart[0].unit += \" / \" + msg.sensors[i].unit;\n    }\n    if (msg.sensors[i].unit.toLowerCase() === 'lux') {\n        groupLineChart[1].lines.push(msg.sensors[i]);\n    }\n}\n\ngroupLineChart[0].unit = groupLineChart[0].unit.slice(3, groupLineChart[0].unit.length);\n\nmsg.payload = groupLineChart;\nreturn msg;","outputs":1,"noerr":0,"x":893,"y":494,"wires":[["652e460e.41ae28"]]},{"id":"d7100fcb.c0a","type":"http in","z":"f2dcdcd4.dd698","name":"","url":"dashboard","method":"get","upload":false,"swaggerDoc":"","x":202,"y":79,"wires":[["ccac3bcb.5f7a88"]]},{"id":"e1242d86.8d569","type":"http in","z":"f2dcdcd4.dd698","name":"","url":"/realtime-chart/api/sensor/latestData","method":"get","upload":false,"swaggerDoc":"","x":165,"y":718,"wires":[["c3b2430c.7abdc"]]},{"id":"c3b2430c.7abdc","type":"function","z":"f2dcdcd4.dd698","name":"add query latest data","func":"msg.macAddr = msg.payload.macAddr;\n\nmsg.arrSensorID = msg.payload.sensorIDs.split(',');\nlet sensor_query = \"\";\nfor(let i = 0;i<msg.arrSensorID.length;i++){\n    if(msg.arrSensorID[i]){\n        sensor_query += \"or \\\"name\\\" = '\" + msg.arrSensorID[i] + \"' \";\n    }\n}\n\nsensor_query = sensor_query.slice(2, sensor_query.length);\n\nlet endTime = Date.now();\nlet startTime = endTime - 5*1000;\nstartTime = startTime*Math.pow(10,6),\nendTime = endTime*Math.pow(10,6)\n\nmsg.query = \"select * from data where \" +\n    sensor_query + \" and \" +\n    \"\\\"macAddr\\\" = '\" + msg.macAddr + \"' and \" +\n    \"time >= \"+ startTime + \" and \" +\n    \"time <= \" + endTime;\nreturn msg;","outputs":1,"noerr":0,"x":347,"y":802,"wires":[["a6310776.c5fd18"]]},{"id":"a6310776.c5fd18","type":"influxdb in","z":"f2dcdcd4.dd698","influxdb":"75d3da9a.6f17c4","name":"get latest sensor data","query":"","rawOutput":false,"precision":"","retentionPolicy":"","x":553,"y":717,"wires":[["13a631aa.5e13fe"]]},{"id":"13a631aa.5e13fe","type":"function","z":"f2dcdcd4.dd698","name":"format latest data response","func":"var initSensorsData = [];\nvar Sensor = function (macAddr, sensorID) {\n    this.macAddr = macAddr;\n    this.sensorID = sensorID;\n    // this.unit = unit;\n    this.timeSeriesData = [] // {\"time\": \"\", \"value\": };\n}\n\nfor (let i=0;i<msg.payload.length;i++) {\n    // msg.payload[i].sensorID= msg.payload[i].sensorID.split('-')[1];\n    let is_new_sensor = true;\n    for (let j=0;j<initSensorsData.length;j++) {\n        if (msg.payload[i].name === initSensorsData[j].sensorID) {\n            initSensorsData[j].timeSeriesData.push({\n                time: msg.payload[i].time,\n                value: msg.payload[i].value\n            })\n            is_new_sensor = false;\n            break;\n        }\n    }\n    if (is_new_sensor) {\n        let new_sensor = new Sensor(msg.payload[i].macAddr, msg.payload[i].name);\n        new_sensor.timeSeriesData.push({\n            time: msg.payload[i].time,\n            value: msg.payload[i].value\n        })\n        initSensorsData.push(new_sensor);\n    }\n}\nmsg.payload = initSensorsData;\nreturn msg;","outputs":1,"noerr":0,"x":724,"y":795,"wires":[["652e460e.41ae28"]]},{"id":"ccac3bcb.5f7a88","type":"dashboard","z":"f2dcdcd4.dd698","name":"","x":437,"y":85,"wires":[["652e460e.41ae28"]]},{"id":"70b29b47.a0e904","type":"function","z":"f2dcdcd4.dd698","name":"get device's sensor ","func":"msg.macAddr = msg.payload.macAddr;\nmsg.query = \"select * from sensor where macAddr='\" + msg.macAddr + \"';\";\nreturn msg;","outputs":1,"noerr":0,"x":289,"y":580,"wires":[["2fa89183.ec76be"]]},{"id":"96ca208f.be71b","type":"function","z":"e896fa76.f883a8","name":"create table device","func":"msg.topic = \"CREATE TABLE device (\" + \n// \"id INT AUTO_INCREMENT NOT NULL,\" +\n\"macAddr VARCHAR(30) NOT NULL,\" +\n\"type VARCHAR(10) NOT NULL,\" +\n\"status VARCHAR(50) NOT NULL,\" +\n\"created_at DATETIME NOT NULL,\" +\n\"PRIMARY KEY (macAddr))\";\nreturn msg;","outputs":1,"noerr":0,"x":306,"y":36,"wires":[["9503da36.4f8e98"]]},{"id":"4acb4420.2bbbdc","type":"debug","z":"e896fa76.f883a8","name":"","active":true,"console":"false","complete":"true","x":598,"y":23,"wires":[]},{"id":"9503da36.4f8e98","type":"mysql","z":"e896fa76.f883a8","mydb":"9d239fb2.ffc52","name":"create tables in database icse_iot ","x":624,"y":116,"wires":[["4acb4420.2bbbdc"]]},{"id":"41717fec.0804c","type":"function","z":"e896fa76.f883a8","name":"create table sensor","func":"msg.topic = \"CREATE TABLE sensor (\" + \n// \"id INT NOT NULL,\" +\n\"name VARCHAR(30) NOT NULL,\" +\n\"macAddr VARCHAR(30) NOT NULL,\" +\n\"unit VARCHAR(10),\" +\n\"status VARCHAR(50) NOT NULL,\" +\n\"created_at DATETIME NOT NULL,\" +\n\"PRIMARY KEY (name, macAddr),\" +\n\"CONSTRAINT fk_device FOREIGN KEY (macAddr) REFERENCES device(macAddr) ON DELETE CASCADE)\";\nreturn msg;","outputs":1,"noerr":0,"x":269,"y":108,"wires":[["9503da36.4f8e98"]]},{"id":"5c83f29e.c43ecc","type":"inject","z":"e896fa76.f883a8","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":90,"y":186,"wires":[["f615db72.042778"]]},{"id":"f615db72.042778","type":"function","z":"e896fa76.f883a8","name":"test query","func":"msg.topic = \"select name from sensor where macAddr = 'ab:bc:1e';\";\nreturn msg;","outputs":1,"noerr":0,"x":256,"y":187,"wires":[["9503da36.4f8e98"]]},{"id":"24422d2f.304f32","type":"function","z":"e896fa76.f883a8","name":"query device","func":"msg.payload = JSON.parse(msg.payload);\nmsg.newDevice = msg.payload;\nmsg.topic = \"select * from sensor where macAddr = '\" + msg.payload.macAddr + \"';\";\nreturn msg;","outputs":1,"noerr":0,"x":268,"y":301,"wires":[["5cfffe37.9204d"]]},{"id":"b91d40f1.4b8fa","type":"inject","z":"e896fa76.f883a8","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":84,"y":104,"wires":[["41717fec.0804c"]]},{"id":"116ed63b.95979a","type":"inject","z":"e896fa76.f883a8","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":78,"y":44,"wires":[["96ca208f.be71b"]]},{"id":"9776cb8c.5dd578","type":"mqtt in","z":"e896fa76.f883a8","name":"","topic":"icse/newDevice","qos":"2","broker":"824650f7.f53e","x":85,"y":359,"wires":[["24422d2f.304f32"]]},{"id":"5cfffe37.9204d","type":"mysql","z":"e896fa76.f883a8","mydb":"9d239fb2.ffc52","name":"query sensors info","x":481,"y":302,"wires":[["7d80e716.503868"]]},{"id":"7d80e716.503868","type":"function","z":"e896fa76.f883a8","name":"check device and sensors exist","func":"// msg.newDevice: contain device register\n\nlet newSensors = [];\nmsg.topic = \"\";\nif(msg.payload.length){\n    for(let i = 0;i<msg.newDevice.sensors.length;i++){\n        let sensor = msg.newDevice.sensors[i];\n        let is_new_sensor = true;\n        for(let j = 0;j<msg.payload.length;j++){\n            let oldSensor = msg.payload[j];\n            if(sensor.name === oldSensor.name){\n                is_new_sensor = false;\n                break;\n            }\n        }\n        if(is_new_sensor){\n            newSensors.push(sensor);\n        }\n    }\n} else{\n    // device didn't register\n    newSensors = msg.newDevice.sensors;\n    msg.topic += \"insert into device (macAddr, type, status, created_at) values('\" +\n            msg.newDevice.macAddr + \"','\" + msg.newDevice.type + \"', 'ONLINE', now());\";\n}\n\nif(newSensors.length) {\n    msg.topic += \"insert into sensor (name,macAddr, unit, status, created_at) values\";\n    for(let i = 0;i<newSensors.length;i++){\n        let newSensor = newSensors[i];\n        msg.topic += \"('\" + newSensor.name + \"','\"+ msg.newDevice.macAddr + \"','\" + newSensor.unit + \"','ONLINE', now()),\";\n    }\n    msg.topic = msg.topic.replace(/.$/,\";\");\n    msg.newSensors = newSensors;\n    return [msg, null];\n}\nreturn [null, msg];\n","outputs":"2","noerr":0,"x":541,"y":370,"wires":[["4a91179e.190ca8"],["56e3738f.9d63ec"]]},{"id":"4a91179e.190ca8","type":"mysql","z":"e896fa76.f883a8","mydb":"9d239fb2.ffc52","name":"save data","x":721,"y":296,"wires":[["56e3738f.9d63ec","32cd9f82.81b69"]]},{"id":"639365d1.05c0cc","type":"mqtt out","z":"e896fa76.f883a8","name":"response to device","topic":"","qos":"","retain":"","broker":"824650f7.f53e","x":1128,"y":339,"wires":[]},{"id":"56e3738f.9d63ec","type":"function","z":"e896fa76.f883a8","name":"message to ESP","func":"let message_response = {\n    topic: \"icse/\" + msg.newDevice.macAddr + \"/action\",\n    payload: {type: \"register\",status: \"OK\"}\n}\nreturn message_response;","outputs":1,"noerr":0,"x":901,"y":363,"wires":[["639365d1.05c0cc"]]},{"id":"32cd9f82.81b69","type":"function","z":"e896fa76.f883a8","name":"save device logs","func":"// msg.newSensors: new sensors\n// msg.measurement = msg.newDevice.macAddr + \"_logs\";\nmsg.payload = [];\n// save device status\nmsg.payload.push([\n    {status: \"ONLINE\"},\n    {\n        name: msg.newDevice.macAddr,\n        macAddr: msg.newDevice.macAddr\n    }\n])\n\nfor(let i = 0;i<msg.newSensors.length;i++){\n    msg.payload.push([\n        {status: \"ONLINE\"},\n        {\n            name: msg.newSensors[i].name,\n            macAddr: msg.newDevice.macAddr\n        }\n    ])\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":896,"y":260,"wires":[["9330438a.5a968"]]},{"id":"9330438a.5a968","type":"influxdb out","z":"e896fa76.f883a8","influxdb":"75d3da9a.6f17c4","name":"","measurement":"logs","precision":"","retentionPolicy":"","x":1150,"y":271,"wires":[]},{"id":"3c57d7c2.4aeff8","type":"mqtt in","z":"e896fa76.f883a8","name":"","topic":"icse/data","qos":"2","broker":"824650f7.f53e","x":71,"y":469,"wires":[[]]},{"id":"4bf252c2.beee7c","type":"inject","z":"e896fa76.f883a8","name":"interval time check device status","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":160,"y":554,"wires":[["71a13d6.7fc7fc4"]]},{"id":"8212bce4.e2f81","type":"function","z":"e896fa76.f883a8","name":"check device status","func":"\n\nif(msg.msgType === \"deviceCome\") {\n    // save the devices macAddr when receive data from it\n    let devicesMacAddrLive = context.get('devicesMacAddrLive') || [];\n    let deviceCome = msg.payload;\n    let isExist = false;\n    for (let i = 0; i < devicesMacAddrLive.length; i++) {\n        if (deviceCome.macAddr === devicesMacAddrLive[i]) {\n            isExist = true;\n            break;\n        }\n    }\n    if (!isExist) {\n        devicesMacAddrLive.push(deviceCome.macAddr);\n    }\n// store the devicesMacAddrLive back\n    context.set('devicesMacAddrLive', devicesMacAddrLive);\n    return null;\n} else {\n//    check device status: msg.msgType = checkDevicesStatus\n    let devicesMacAddrLive = context.get('devicesMacAddrLive') || [];\n    let currentDevices = msg.payload;\n    let onlineDevicesMacAddr = [];\n    let offlineDevicesMacAddr = [];\n    for(let i = 0;i<currentDevices.length;i++){\n        let isOnline = false;\n        for(let j = 0;j<devicesMacAddrLive.length;j++){\n            if(currentDevices[i].macAddr === devicesMacAddrLive[j]){\n                isOnline = true;\n                break;\n            }\n        }\n        if(isOnline){\n            onlineDevicesMacAddr.push(currentDevices[i].macAddr);\n        } else {\n            offlineDevicesMacAddr.push(currentDevices[i].macAddr);\n        }\n    }\n    devicesMacAddrLive = [];\n    context.set('devicesMacAddrLive', devicesMacAddrLive);\n    msg.onlineDevicesMacAddr = onlineDevicesMacAddr;\n    msg.offlineDevicesMacAddr = offlineDevicesMacAddr;\n    return msg;\n}","outputs":"1","noerr":0,"x":579,"y":442,"wires":[["7237698a.3d4298"]]},{"id":"7237698a.3d4298","type":"debug","z":"e896fa76.f883a8","name":"","active":true,"console":"false","complete":"true","x":757,"y":479,"wires":[]},{"id":"71a13d6.7fc7fc4","type":"function","z":"e896fa76.f883a8","name":"add query devices status","func":"msg.topic = \"select macAddr,status from device\";\nmsg.msgType = \"checkDevicesStatus\";\nreturn msg;","outputs":1,"noerr":0,"x":308,"y":648,"wires":[["7ba26bd4.709584"]]},{"id":"7ba26bd4.709584","type":"mysql","z":"e896fa76.f883a8","mydb":"9d239fb2.ffc52","name":"get devices status","x":482,"y":557,"wires":[["8212bce4.e2f81"]]},{"id":"62ae2a1d.afe1b4","type":"function","z":"e896fa76.f883a8","name":"format data","func":"msg.payload = JSON.parse(msg.payload);\nmsg.msgType = \"deviceCome\";\nreturn msg;","outputs":1,"noerr":0,"x":270,"y":465,"wires":[["8212bce4.e2f81"]]},{"id":"c6553cbf.466a2","type":"mqtt in","z":"e896fa76.f883a8","name":"","topic":"icse/data","qos":"2","broker":"824650f7.f53e","x":105,"y":762,"wires":[[]]},{"id":"5cc6b60b.9d8bf8","type":"function","z":"e896fa76.f883a8","name":"save data","func":"// msg.newSensors: new sensors\nmsg.payload = JSON.parse(msg.payload);\nlet payload = [];\n// save device data\n\nfor(let i = 0;i<msg.payload.sensorsData.length;i++){\n    let sensor = msg.payload.sensorsData[i];\n    if(typeof(sensor.value) !== \"boolean\"){\n        payload.push([\n            {value: sensor.value},\n            {\n                name: sensor.name,\n                macAddr:msg.payload.macAddr\n            }\n        ])\n    }\n}\nmsg.payload = payload;\nreturn msg;","outputs":1,"noerr":0,"x":331,"y":768,"wires":[["5c12f173.962b4"]]},{"id":"5c12f173.962b4","type":"influxdb out","z":"e896fa76.f883a8","influxdb":"75d3da9a.6f17c4","name":"","measurement":"data","precision":"","retentionPolicy":"","x":605,"y":779,"wires":[]},{"id":"268af6ac.375f2a","type":"mqtt in","z":"d977b914.9b8da8","name":"","topic":"icse/newDevice","qos":"2","broker":"824650f7.f53e","x":95,"y":304.0666809082031,"wires":[["3670d84e.337118"]]},{"id":"db178717.782248","type":"meo-esp-out","z":"d977b914.9b8da8","name":"action threshold","temperatureLimit":10,"humidityLimit":"60","luxLimit":2310,"x":850,"y":500.566650390625,"wires":[["2dde11a5.9b19de"]]},{"id":"a65301ed.576b8","type":"inject","z":"d977b914.9b8da8","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":158.88333129882812,"y":75,"wires":[["8ef2b188.6e5c2"]]},{"id":"8ef2b188.6e5c2","type":"mysql-query","z":"d977b914.9b8da8","mydb":"3010223e.62d47e","name":"check table exist","queryString":"SHOW TABLES LIKE 'device';\nSHOW TABLES LIKE 'sensor';\n","outputTo":"queryResult","x":360.8833312988281,"y":75,"wires":[["d369c7ee.3dd128"]]},{"id":"d369c7ee.3dd128","type":"function","z":"d977b914.9b8da8","name":"send init tbl command","func":"var tbl_exist = 0;\nfor (let i=0;i<2;i++){\n    if(msg.queryResult[i].length>=1){\n        tbl_exist+=1;\n    }\n}\nif(tbl_exist<2){\n    return msg;    \n}\n","outputs":1,"noerr":0,"x":590.8833312988281,"y":75,"wires":[["1ebad5c2.65ca0a"]]},{"id":"1ebad5c2.65ca0a","type":"mysql-query","z":"d977b914.9b8da8","mydb":"3010223e.62d47e","name":"init tables if not exist","queryString":"CREATE TABLE IF NOT EXISTS device (\n    macAddr varchar(30) NOT NULL,\n    type varchar(10) NOT NULL,\n    status varchar(50) NOT NULL,\n    created_at DATETIME NOT NULL,\n    PRIMARY KEY (macAddr)\n); \n\nCREATE TABLE IF NOT EXISTS sensor (\n    name varchar(30) NOT NULL,\n    macAddr varchar(30) NOT NULL,\n    unit varchar(10),\n    status varchar(50) NOT NULL,\n    created_at DATETIME NOT NULL,\n    PRIMARY KEY (name,macAddr),\n    FOREIGN KEY (macAddr) REFERENCES device(macAddr) ON DELETE CASCADE\n); \n","outputTo":"queryResult","x":830.8833312988281,"y":75,"wires":[["7d7ba4a8.36567c"]]},{"id":"7d7ba4a8.36567c","type":"debug","z":"d977b914.9b8da8","name":"","active":true,"console":"false","complete":"true","x":1072.88330078125,"y":75,"wires":[]},{"id":"3670d84e.337118","type":"function","z":"d977b914.9b8da8","name":"parse payload msg","func":"msg.payload = JSON.parse(msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":171,"y":183.11666870117188,"wires":[["47c1ec01.fff074"]]},{"id":"d8b5f8c3.ae9128","type":"function","z":"d977b914.9b8da8","name":"process query result","func":"var moment = global.get('moment');\nif (msg.deviceQueryResult.length === 0) {\n    // prepare add board query\n    var addBoardQuery = 'INSERT INTO device VALUES(?,?,?,?)';\n    var bindQuery = [\n        msg.payload.macAddr, \n        msg.payload.type,\n        'ONLINE',\n        moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\")\n    ];\n    var addNewBoardMsg = {\n        payload:msg.payload,\n        query:addBoardQuery,\n        bindQuery:bindQuery\n    };\n    return [addNewBoardMsg, null];\n    // add board device    \n} else {\n    // do nothing    \n    return [null, msg];\n}","outputs":"2","noerr":0,"x":572.75,"y":303.8666687011719,"wires":[["fb21daa5.5c7e78"],["977f9bc5.e21cb8"]]},{"id":"2f5c6b6d.8e3b14","type":"mqtt out","z":"d977b914.9b8da8","name":"","topic":"","qos":"","retain":"","broker":"824650f7.f53e","x":1672.7500610351562,"y":315.8666687011719,"wires":[]},{"id":"7741eac9.9d0534","type":"mysql-query","z":"d977b914.9b8da8","mydb":"3010223e.62d47e","name":"check board","queryString":"","outputTo":"deviceQueryResult","x":436.75,"y":181.86666870117188,"wires":[["d8b5f8c3.ae9128"]]},{"id":"47c1ec01.fff074","type":"function","z":"d977b914.9b8da8","name":"check device exist","func":"// authenticate msg format\nlet query ='select * from device where macAddr = ?';\n// console.log(msg.payload.mac_addr);\nlet bindQuery = [ msg.payload.macAddr,];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":316.75,"y":304.8666687011719,"wires":[["7741eac9.9d0534"]]},{"id":"fb21daa5.5c7e78","type":"mysql-query","z":"d977b914.9b8da8","mydb":"3010223e.62d47e","name":"add board","queryString":"","outputTo":"queryResult","x":690.75,"y":179.86666870117188,"wires":[["977f9bc5.e21cb8"]]},{"id":"158d36f.601e0c9","type":"function","z":"d977b914.9b8da8","name":"process sensor exist result","func":"var moment = global.get('moment');\nfunction checkSensorExist(checkSensor, currentSensors) {\n    var isExist = false;\n    for (var i = 0; i < currentSensors.length; i++) {\n        if (checkSensor.name == currentSensors[i].name) {\n            isExist = true;\n            break;\n        }\n    }\n    return isExist;\n}\n\nfunction createQueryaddNewSensors(newSensors, macAddr) {\n    var addSensorsQuery = '';\n    var bindQuery = [];\n    for (var i = 0; i < newSensors.length; i++) {\n        var newSensor = newSensors[i];\n        addSensorsQuery += 'INSERT INTO sensor VALUES (?, ?, ?,?,?); ';\n        bindQuery.push(\n            newSensor.name,\n            macAddr,\n            newSensor.unit, \n            'ONLINE',\n            moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\")\n            );\n    }\n    return {\n        query: addSensorsQuery,\n        bindQuery: bindQuery\n    };\n}\n\nvar currentSensors = msg.sensorsQueryResult;\nvar deviceSensors = msg.payload.sensors;\nvar macAddr = msg.payload.macAddr;\nvar newSensors = [];\nfor (var i = 0; i < deviceSensors.length; i++) {\n    checkDeviceSensor = deviceSensors[i];\n    if (checkSensorExist(checkDeviceSensor, currentSensors) === false) {\n        newSensors.push(checkDeviceSensor);\n    }\n}\n\nif (newSensors.length > 0) {\n    var addNewSensorsQuery = createQueryaddNewSensors(newSensors, macAddr);\n    var newMsg = {\n        query:addNewSensorsQuery.query,\n        bindQuery:addNewSensorsQuery.bindQuery,\n        payload: msg.payload\n    };\n    return [newMsg, null];\n} else {\n    return [null, msg];\n}","outputs":"2","noerr":0,"x":1146.75,"y":306.8666687011719,"wires":[["70ba08e3.cd0978"],["d110cd9e.0411b"]]},{"id":"70ba08e3.cd0978","type":"mysql-query","z":"d977b914.9b8da8","mydb":"3010223e.62d47e","name":"add sensor","queryString":"","outputTo":"addSensorResult","x":1339.75,"y":165.86666870117188,"wires":[["d110cd9e.0411b"]]},{"id":"1229c485.e6a14b","type":"mysql-query","z":"d977b914.9b8da8","mydb":"3010223e.62d47e","name":"get sensors Info","queryString":"","outputTo":"sensorsQueryResult","x":946.75,"y":177.86666870117188,"wires":[["158d36f.601e0c9"]]},{"id":"d110cd9e.0411b","type":"function","z":"d977b914.9b8da8","name":"send authenticated message","func":"var macAddr = msg.payload.macAddr;\n\nvar authenticatedMsg ={\n    type:'register',\n    status:'OK'\n}\nvar sendAuthenticatedMsg ={\n    topic:'icse/'+macAddr+'/action',\n    payload:authenticatedMsg\n}\nreturn sendAuthenticatedMsg;","outputs":1,"noerr":0,"x":1456.7500610351562,"y":321.8666687011719,"wires":[["2f5c6b6d.8e3b14"]]},{"id":"977f9bc5.e21cb8","type":"function","z":"d977b914.9b8da8","name":"get current device sensors","func":"// authenticate msg format\nlet query ='select * from sensor where macAddr = ?';\nlet bindQuery = [ msg.payload.macAddr,];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":848.75,"y":305.8666687011719,"wires":[["1229c485.e6a14b"]]},{"id":"62454d3a.710f24","type":"mqtt in","z":"d977b914.9b8da8","name":"","topic":"icse/data","qos":"2","broker":"824650f7.f53e","x":65,"y":500,"wires":[["db01f057.eed93"]]},{"id":"db01f057.eed93","type":"function","z":"d977b914.9b8da8","name":"parse payload msg","func":"msg.payload = JSON.parse(msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":122.88333129882812,"y":408,"wires":[["ea5e8ab0.083d38"]]},{"id":"a09c5a34.255288","type":"influxdb-write-data","z":"d977b914.9b8da8","name":"add time serie data","influxdbServer":"e02c576f.14e108","dataInput":"serieData","measurement":"data","outputTo":"writeDataResult","x":605.88330078125,"y":401,"wires":[["312be7a3.30ddb8"]]},{"id":"312be7a3.30ddb8","type":"function","z":"d977b914.9b8da8","name":"add time serie data","func":"//\tC: [1, 100]; \t%: [0, 100],\tlux: [1, 65535]\nlet macAddr = msg.payload.macAddr;\nlet sensorData = msg.payload.sensorsData;\nlet sensorsInfo = msg.sensorsInfo;\n\nfunction getSensorInfo(name, macAddr) {\n    for (var i = 0; i < sensorsInfo.length; i++) {\n        if (sensorsInfo[i].name == name && sensorsInfo[i].macAddr == macAddr) {\n            return sensorsInfo[i];\n        }\n    }\n}\nif (msg.hasOwnProperty('savedCount')) {\n    msg.savedCount += 1;\n} else {\n    msg.savedCount = 0;\n    msg.addedSensors = [];\n    for (var i = 0; i < sensorData.length; i++) {\n        var sensorInfo = getSensorInfo(sensorData[i].name, macAddr);\n        sensorData[i].unit=sensorInfo.unit;\n        if (sensorInfo.unit == 'Lux' || sensorInfo.unit == '%' || sensorInfo.unit == 'C') {\n            msg.addedSensors.push(sensorData[i]);\n        }\n    }\n}\nif (msg.savedCount < msg.addedSensors.length) {\n    let savePoint = msg.addedSensors[msg.savedCount];\n    let sendMsg = msg;\n    sendMsg.serieData = {\n        tags: {\n            'macAddr': macAddr,\n            'name': savePoint.name,\n        },\n        fields: {\n            'value': savePoint.value\n        },\n        time_stamp: Date.now() * Math.pow(10, 6)\n    };\n    node.send([sendMsg, null]);\n} else {\n    node.send([null, msg]);\n\n}","outputs":"2","noerr":0,"x":604.88330078125,"y":498,"wires":[["a09c5a34.255288"],["db178717.782248"]]},{"id":"2c513338.f746dc","type":"mysql-query","z":"d977b914.9b8da8","mydb":"3010223e.62d47e","name":"get sensors Info","queryString":"","outputTo":"sensorsInfo","x":347.8833312988281,"y":498,"wires":[["312be7a3.30ddb8"]]},{"id":"ea5e8ab0.083d38","type":"function","z":"d977b914.9b8da8","name":"get sensors info","func":"// authenticate msg format\nlet query ='select * from sensor where macAddr = ?';\n// console.log(msg.payload.mac_addr);\nlet bindQuery = [ msg.payload.macAddr,];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":344.8833312988281,"y":408,"wires":[["2c513338.f746dc"]]},{"id":"2dde11a5.9b19de","type":"mqtt out","z":"d977b914.9b8da8","name":"send control msg","topic":"","qos":"","retain":"","broker":"824650f7.f53e","x":1060.8167114257812,"y":498,"wires":[]},{"id":"f144d908.a0e498","type":"mysql-query","z":"f2dcdcd4.dd698","mydb":"3010223e.62d47e","name":"","queryString":"select * from device;","outputTo":"payload","x":364,"y":174,"wires":[["f23f5606.c83f58"]]},{"id":"42002991.84c038","type":"mysql-query","z":"f2dcdcd4.dd698","mydb":"3010223e.62d47e","name":"","queryString":"select * from sensor;","outputTo":"payload","x":397,"y":268,"wires":[["abf18714.4c54c8"]]},{"id":"2fa89183.ec76be","type":"mysql-query","z":"f2dcdcd4.dd698","mydb":"3010223e.62d47e","name":"","queryString":"","outputTo":"sensors","x":467,"y":514,"wires":[["5722c96e.8ded18"]]}]